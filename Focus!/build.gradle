
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

dependencies {
    compile "com.android.support:support-v4:24.0.0-alpha1"
    compile "com.android.support:support-v13:24.0.0-alpha1"
    compile "com.android.support:cardview-v7:24.0.0-alpha1"
    compile "com.android.support:appcompat-v7:24.0.0-alpha1"
    compile 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion;
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion;

    compile "android.arch.lifecycle:runtime:1.0.0"
    compile "android.arch.lifecycle:extensions:1.0.0-beta2"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-beta2"

    compile 'com.google.code.gson:gson:2.4'



}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 24
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
